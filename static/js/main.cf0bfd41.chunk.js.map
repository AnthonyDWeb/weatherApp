{"version":3,"sources":["components/myMap.js","components/CityMap.js","context/Favorite.Context.js","Api.js","assets/neige.jpg","assets/brumeux.jpg","assets/soleil.jpg","assets/nuageux.jpg","assets/orageux.jpg","assets/pluie.jpg","views/Home.js","components/CityCard.js","views/Favorite.js","assets/logo.png","components/Navbar.js","components/Footer.js","App.js","index.js"],"names":["MyMap","props","console","log","useMap","setView","center","zoom","TileLayer","attribution","url","Marker","position","Popup","Citymap","latitude","longitude","MapContainer","className","scrollWheelZoom","FavoriteContext","createContext","weatherSearch","city","a","fetch","res","json","data","WeatherStyle","style","div","Result","WeatherInfo","WeatherInput","Background","weather","Rain","Clouds","Thunderstorm","Clear","Mist","Snow","Map","Home","useState","JSON","parse","localStorage","getItem","setCity","isCheked","setIsCheked","citySearched","setCitySearch","useContext","favoriteCity","setfavoriteCity","useEffect","defaultWeather","myCity","e","target","value","myWeather","preventDefault","cityInformation","message","alert","checkChange","removeItem","setItem","stringify","name","setFavorite","length","prevState","main","onChange","type","maxLength","placeholder","onClick","src","icon","alt","coord","lon","lat","checked","CardStyle","CityCard","map","index","fav","filter","removeFavorite","Favorite","Nav","nav","Navbar","logo","to","FooterStyle","footer","Footer","today","moment","format","hours","Page","App","Provider","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAuBeA,MApBf,SAAeC,GAMX,OALJC,QAAQC,IAAI,QAASF,GACLG,cACRC,QAAQJ,EAAMK,OAAQL,EAAMM,MAI5B,qCACA,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAEN,cAACC,EAAA,EAAD,CAAQC,SAAUX,EAAMW,SAAxB,SACI,eAACC,EAAA,EAAD,mCACyB,uBADzB,iCCCGC,I,wBAAAA,EAXf,SAAiBb,GAEb,IAAMW,EAAW,CAACX,EAAMc,SAAUd,EAAMe,WAGxC,OACI,cAACC,EAAA,EAAD,CAAcC,UAAU,eAAeZ,OAAQM,EAAUL,KAAM,GAAIY,iBAAiB,EAApF,SACI,cAAC,EAAD,CAAOP,SAAUA,EAAUN,OAAQM,EAAUL,KAAM,QCXlDa,EAAkBC,wBAAc,ICQ9BC,EARI,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACFC,MAAM,qDAAD,OAAsDF,EAAtD,4CADH,cACdG,EADc,gBAEDA,EAAIC,OAFH,cAEdC,EAFc,OAGlB1B,QAAQC,IAAI,gBAAiByB,GAHX,kBAIXA,GAJW,2CAAH,sDCFJ,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,mCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,kCCoBnCC,G,MAAeC,IAAMC,IAAT,8TAgBZC,EAASF,IAAMC,IAAT,oUAgBNE,EAAcH,IAAMC,IAAT,+QAgBXG,EAAeJ,IAAMC,IAAT,uJAYZI,EAAaL,IAAMC,IAAT,kKAGH,SAAC9B,GACN,OAAOA,EAAMmC,SACT,IAAK,OACL,MAAO,YAIK,SAACnC,GACjB,OAAOA,EAAMmC,SACT,IAAK,OACL,MAAO,WAKK,SAACnC,GACjB,OAAOA,EAAMmC,SACT,IAAK,OACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,SACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,eACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,QACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,OACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,OACL,MAAM,OAAN,OAAcC,EAAd,SAONC,EAAMb,IAAMC,IAAT,0HA8HMa,EAvHF,WACT,IACA,EAAuBC,oBADH,kBAAMC,KAAKC,MAAMC,aAAaC,QAAQ,mBAC1D,mBAAO1B,EAAP,KAAY2B,EAAZ,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAsCP,mBAAS,MAA/C,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAwCC,qBAAWnC,GAA5CoC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,gBAGrBC,qBAAW,YAEa,uCAAG,4BAAAlC,EAAA,0DACfD,EADe,gCAEGD,EAAcC,GAFjB,OAETG,EAFS,OAGf0B,GAAY,GACZlD,QAAQC,IAAI,SAAUuB,GACtB4B,EAAc5B,GALC,2CAAH,qDAQpBiC,GACAzD,QAAQC,IAAI,UAAZ,UAA0BoB,MAC3B,IAEH,IAAMqC,EAAS,SAACC,GAAMX,EAAQW,EAAEC,OAAOC,QAEjCC,EAAS,uCAAG,WAAMH,GAAN,eAAArC,EAAA,6DACdqC,EAAEI,iBADY,SAEgB3C,EAAcC,GAF9B,QAER2C,EAFQ,QAGMC,QAChBC,MAAM,+BAENhB,GAAY,GACZE,EAAcY,IAPJ,2CAAH,sDAWTG,EAAc,WAChBnE,QAAQC,IAAI,gBAAiBgD,GAC7BA,EAAWH,aAAasB,WAAW,eACnCtB,aAAauB,QAAQ,cAAczB,KAAK0B,UAAUnB,EAAaoB,OAC/DrB,GAAaD,IAGXuB,EAAc,WACZlB,EAAamB,OAAS,GACtBlB,GAAiB,SAAAmB,GACb,MAAM,GAAN,mBAAWA,GAAX,CAAsBvB,OAGF,IAAxBG,EAAamB,OACbP,MAAM,mEACyB,IAAxBZ,EAAamB,QACpBP,MAAM,4EAId,OACIf,EACA,eAAClB,EAAD,CAAYC,QAASiB,EAAajB,QAAQ,GAAGyC,KAA7C,UACI,oBAAI3D,UAAU,aAAd,kBACA,qBAAKA,UAAU,YAAf,SACI,eAACW,EAAD,CAAcX,UAAU,gBAAxB,UACI,8BACI,iCACI,uBAAOA,UAAU,gBAAgB4D,SAAUlB,EAAQmB,KAAK,OAAOC,UAAW,GAAIC,YAAY,oBAC1F,wBAAQC,QAASlB,EAAjB,wBAGPX,GACG,eAACrB,EAAD,WACI,6BAAKqB,EAAaoB,OAClB,eAACxC,EAAD,WACI,kCAAI,6CAAJ,IAA4BoB,EAAajB,QAAQ,GAAGyC,QACpD,qBAAKM,IAAG,4CAAuC9B,EAAajB,QAAQ,GAAGgD,KAA/D,WAA8EC,IAAI,kBAE9F,cAAC1C,EAAD,CAAKzB,UAAU,GAAf,SACI,cAAC,EAAD,CAASF,UAAWqC,EAAaiC,MAAMC,IAAKxE,SAAUsC,EAAaiC,MAAME,QAEzE,wBAAQN,QAASR,EAAaxD,UAAU,cAAxC,6BACJ,eAACgB,EAAD,WACI,gDACA,uBAAOgD,QAASb,EAAaU,KAAK,WAAWU,QAAStC,kBAO9E,gCACI,oBAAIjC,UAAU,aAAd,kBACA,qBAAKA,UAAU,YAAf,SACI,eAACW,EAAD,CAAcX,UAAU,gBAAxB,UACI,8BACI,iCACI,uBAAOA,UAAU,gBAAgB4D,SAAUlB,EAAQmB,KAAK,OAAOC,UAAW,GAAIC,YAAY,oBAC1F,wBAAQC,QAASlB,EAAjB,wBAGPX,GACG,eAACrB,EAAD,WACI,6BAAKqB,EAAaoB,OAClB,eAACxC,EAAD,WACI,kCAAI,6CAAJ,IAA4BoB,EAAajB,QAAQ,GAAGyC,QACpD,qBAAKM,IAAG,4CAAuC9B,EAAajB,QAAQ,GAAGgD,KAA/D,WAA8EC,IAAI,kBAE1F,wBAAQH,QAASR,EAAaxD,UAAU,cAAxC,6BACJ,eAACgB,EAAD,WACI,gDACA,uBAAOgD,QAASb,EAAaU,KAAK,WAAWU,QAAStC,mBC5NhFuC,EAAY5D,IAAMC,IAAT,uJAQTC,EAASF,IAAMC,IAAT,0eAoBY,SAAC9B,GACjB,OAAOA,EAAMmC,SACT,IAAK,OACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,SACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,eACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,QACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,OACL,MAAM,OAAN,OAAcC,EAAd,KAEA,IAAK,OACL,MAAM,OAAN,OAAcC,EAAd,SAONT,EAAcH,IAAMC,IAAT,sUAQA,SAAC9B,GACN,OAAOA,EAAMmC,SACT,IAAK,OACL,MAAO,YAKK,SAACnC,GACjB,OAAOA,EAAMmC,SACT,IAAK,OACL,MAAO,WA4CRuD,GA5BE,WACb,MAAwCpC,qBAAWnC,GAA5CoC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,gBAUrB,OACID,GACA,cAACkC,EAAD,UACSlC,EAAaoC,KAAK,SAACrE,EAAMsE,GAAP,OAAiBtE,GAChC,eAAC,EAAD,CAAqBa,QAASb,EAAKa,QAAQ,GAAGyC,KAA9C,UACI,6BAAKtD,EAAKkD,OACV,eAAC,EAAD,CAAarC,QAASb,EAAKa,QAAQ,GAAGyC,KAAtC,UACI,kCAAI,6CAAJ,IAA4BtD,EAAKa,QAAQ,GAAGyC,QAC5C,qBAAKM,IAAG,4CAAuC5D,EAAKa,QAAQ,GAAGgD,KAAvD,WAAsEC,IAAI,kBAElF,wBAAQH,QAAS,kBAlBlB,SAACT,GACpB,IAAIqB,EAAMtC,EAAauC,QAAO,SAAAD,GAAG,OAAIA,EAAIrB,OAASA,KAClDvE,QAAQC,IAAI2F,GACZrC,EAAgBqC,GACZ5F,QAAQC,IAAI,WAAYqD,GACxBtD,QAAQC,IAAI,cAAesD,GAaYuC,CAAezE,EAAKkD,OAAOvD,UAAU,iBAA5D,kCANK2E,SCrGlBI,GAXE,WACb,OACI,qCACI,oBAAI/E,UAAU,aAAd,sBACA,8BACI,cAAC,GAAD,UCbD,OAA0B,iCCWnCgF,GAAMpE,IAAMqE,IAAT,osBAsDMC,GAfA,WACX,OACI,eAACF,GAAD,WACI,gCACI,qBAAKhF,UAAU,OAAOiE,IAAKkB,GAAMhB,IAAI,SACrC,6BAAI,cAAC,IAAD,CAAMnE,UAAU,WAAWoF,GAAG,GAA9B,6BAER,+BACI,6BAAI,cAAC,IAAD,CAAMA,GAAG,IAAT,oBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,YAAT,+B,oBC/CdC,GAAczE,IAAM0E,OAAT,6XAwCFC,GAhBA,WACX,IAAIC,EAAQC,OAASC,OAAO,gBACxBC,EAAQF,OAASC,OAAO,aAC5B,OACI,eAACL,GAAD,WACI,8BACI,+BAAI,mDAA4B,cAAC,IAAD,oCAEpC,gCACI,mCAAMG,EAAN,OACA,mCAAMG,EAAN,cC5BVC,GAAOhF,IAAMC,IAAT,oIA0BKgF,OAnBf,WACI,MAAwClE,mBAAS,IAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAEF,OACE,cAAC,IAAD,UACI,cAACrC,EAAgB4F,SAAjB,CAA0BjD,MAAO,CAACP,eAAcC,mBAAhD,SACA,eAACqD,GAAD,WACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,UAAWvE,IACjC,cAAC,IAAD,CAAOsE,KAAK,YAAYC,UAAWlB,QAEvC,cAAC,GAAD,YCjCZmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cf0bfd41.chunk.js","sourcesContent":["import {TileLayer, Marker, Popup, useMap} from 'react-leaflet'\r\n\r\n\r\nfunction MyMap(props) {\r\nconsole.log('props', props)\r\n    const map = useMap();\r\n    map.setView(props.center, props.zoom);\r\n  \r\n\r\n    return (\r\n        <>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={props.position}>\r\n            <Popup>   \r\n                A pretty CSS3 popup. <br /> Easily customizable.\r\n            </Popup>\r\n        </Marker>\r\n        </>\r\n    )\r\n}\r\nexport default MyMap;\r\n","import { MapContainer } from 'react-leaflet'\r\nimport './CityMap.css';\r\nimport MyMap from './myMap';\r\n\r\n\r\n\r\nfunction Citymap(props) {\r\n    \r\n    const position = [props.latitude, props.longitude]\r\n    \r\n\r\n    return (\r\n        <MapContainer className=\"mapContainer\" center={position} zoom={13} scrollWheelZoom={false}>\r\n            <MyMap position={position} center={position} zoom={13}/>\r\n      </MapContainer>\r\n    )\r\n}\r\nexport default Citymap;","import { createContext } from \"react\";\r\n\r\nexport const FavoriteContext = createContext([])","\r\n\r\nconst weatherSearch = async(city) => {\r\n    let res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=7c4161e5bf58a767701a53b267e073ef`)\r\n    let data = await res.json()\r\n    console.log('data api.js->', data)\r\n    return data\r\n}\r\n\r\n\r\nexport default weatherSearch;","export default __webpack_public_path__ + \"static/media/neige.57142c56.jpg\";","export default __webpack_public_path__ + \"static/media/brumeux.9f9ad0a9.jpg\";","export default __webpack_public_path__ + \"static/media/soleil.5cf730f0.jpg\";","export default __webpack_public_path__ + \"static/media/nuageux.8686f18d.jpg\";","export default __webpack_public_path__ + \"static/media/orageux.f2ca1555.jpg\";","export default __webpack_public_path__ + \"static/media/pluie.b4a055a5.jpg\";","// Library\r\nimport { useState, useEffect, useContext } from 'react';\r\nimport style from 'styled-components'\r\n\r\n// Views\r\n// Components\r\nimport Citymap from '../components/CityMap';\r\n// import Citymap from '../components/CityMap2';\r\n// files\r\nimport { FavoriteContext } from '../context/Favorite.Context';\r\nimport weatherSearch from '../Api';\r\nimport Snow from '../assets/neige.jpg'\r\nimport Mist from '../assets/brumeux.jpg'\r\nimport Clear from '../assets/soleil.jpg'\r\nimport Clouds from '../assets/nuageux.jpg'\r\nimport Thunderstorm from '../assets/orageux.jpg'\r\nimport Rain from '../assets/pluie.jpg'\r\n\r\n// style & CSS\r\nimport '../App.css';\r\nconst WeatherStyle = style.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: center;\r\n    font-size: 1.2rem;\r\n    margin-bottom: 2rem;\r\n\r\n    .input-onchage{\r\n        margin: 0 0.5rem 0.5rem 3rem;\r\n        width: 250px;\r\n        padding-left: 0.3rem;\r\n    }\r\n    button{\r\n        width: 50px;\r\n    }\r\n`;\r\nconst Result = style.div`\r\n    margin: 3rem 0 5rem 0;\r\n\r\n    h3{\r\n        font-size: 2rem;\r\n        margin: 1.5rem 25rem;\r\n        background: dimgray;\r\n    }\r\n    .btn-add-fav{\r\n        width: 150px;\r\n        padding: 1rem;\r\n        border-radius: 3px;\r\n        background: skyblue;\r\n    }\r\n    #mapid { height: 180px; }\r\n`;\r\nconst WeatherInfo = style.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    p{\r\n        margin-right: 1rem;\r\n    }\r\n    span{\r\n        font-weight: 900;\r\n    }\r\n    img{\r\n        // background: red;\r\n        border-radius: 50px;\r\n    }\r\n`;\r\nconst WeatherInput = style.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    input {\r\n        margin: 0.5rem;\r\n    }\r\n`;\r\n\r\n\r\n\r\nconst Background = style.div`\r\np{\r\n    margin-right: 1rem;\r\n    color: ${(props) => {\r\n        switch(props.weather){\r\n            case \"Rain\":\r\n            return \"black\";\r\n        default: \r\n        }\r\n    }};\r\n    background-color: ${(props) => {\r\n        switch(props.weather){\r\n            case \"Rain\":\r\n            return \"gray\";\r\n        default: \r\n        }\r\n    }};\r\n}\r\n    background-image: ${(props) => {\r\n        switch(props.weather){\r\n            case \"Rain\":\r\n            return `url(${Rain})`;\r\n                \r\n            case \"Clouds\":\r\n            return `url(${Clouds})`;\r\n                \r\n            case \"Thunderstorm\":\r\n            return `url(${Thunderstorm})`;\r\n                \r\n            case \"Clear\":\r\n            return `url(${Clear})`;\r\n                \r\n            case \"Mist\":\r\n            return `url(${Mist})`;\r\n                \r\n            case \"Snow\":\r\n            return `url(${Snow})`;\r\n                \r\n            default:\r\n        }\r\n    }};\r\n    background-size: cover;\r\n`;\r\nconst Map = style.div`\r\n    display: flex;\r\n    widht: 100%;\r\n    justify-content: center;\r\n    margin-bottom: 1rem;\r\n`;\r\n\r\nconst Home = () => {\r\n    const defaultCity = () => JSON.parse(localStorage.getItem('weatherCity'))\r\n    const [city,setCity] = useState(defaultCity)\r\n    const [isCheked, setIsCheked] = useState(false)\r\n    const [citySearched, setCitySearch] = useState(null)\r\n    const {favoriteCity, setfavoriteCity} = useContext(FavoriteContext)\r\n    \r\n    \r\n    useEffect( () =>{\r\n\r\n        const defaultWeather = async() =>{\r\n            if (city) {\r\n                const res = await weatherSearch(city);\r\n                setIsCheked(true)\r\n                console.log(\"res ->\", res);\r\n                setCitySearch(res);\r\n            }\r\n        }\r\n        defaultWeather();\r\n        console.log('city ->', `${city}`)\r\n    } ,[])\r\n    \r\n    const myCity = (e) =>{setCity(e.target.value) }\r\n\r\n    const myWeather = async(e) => {\r\n        e.preventDefault()\r\n        const cityInformation = await weatherSearch(city)\r\n        if (cityInformation.message) {\r\n            alert(\"sorry, retry a bit later !\")\r\n        } else {\r\n            setIsCheked(false)\r\n            setCitySearch(cityInformation)\r\n        }\r\n    }\r\n   \r\n    const checkChange = () => {\r\n        console.log('is checked ->', isCheked)\r\n        isCheked ? localStorage.removeItem('weatherCity') :  \r\n        localStorage.setItem('weatherCity',JSON.stringify(citySearched.name))\r\n        setIsCheked(!isCheked)\r\n    }\r\n\r\n    const setFavorite = () => {\r\n        if (favoriteCity.length < 3){\r\n            setfavoriteCity( prevState => {\r\n                return [...prevState, citySearched]\r\n            })\r\n        } \r\n        if (favoriteCity.length === 2){\r\n            alert(\"you have reached the maximum number of cities in your favorites\")\r\n        } else if (favoriteCity.length === 3) {\r\n            alert(\"you have already reached the maximum number of cities in your favorites\")\r\n        }\r\n    }\r\n    // console.log(\"coord\", citySearched.coord.lon)\r\n    return (\r\n        citySearched ? \r\n        <Background weather={citySearched.weather[0].main}>\r\n            <h1 className=\"main-title\">Home</h1>\r\n            <div className=\"container\">\r\n                <WeatherStyle className=\"weather-input\">\r\n                    <div> \r\n                        <form >\r\n                            <input className=\"input-onchage\" onChange={myCity} type=\"text\" maxLength={20} placeholder=\"Enter city name\" />\r\n                            <button onClick={myWeather} >Check</button>\r\n                        </form>\r\n                    </div>\r\n                    {citySearched &&  (\r\n                        <Result>\r\n                            <h3>{citySearched.name}</h3>\r\n                            <WeatherInfo>\r\n                                <p> <span>Weather: </span> {citySearched.weather[0].main}</p>\r\n                                <img src={`https://openweathermap.org/img/wn/${citySearched.weather[0].icon}@2x.png`} alt=\"icon-meteo\" />\r\n                            </WeatherInfo>\r\n                            <Map className=\"\">\r\n                                <Citymap longitude={citySearched.coord.lon} latitude={citySearched.coord.lat}/>\r\n                            </Map>\r\n                                <button onClick={setFavorite} className=\"btn-add-fav\" >Add to favorite</button>\r\n                            <WeatherInput>\r\n                                <p>City by default</p>\r\n                                <input onClick={checkChange} type=\"checkbox\" checked={isCheked} /> \r\n                            </WeatherInput>\r\n                        </Result>\r\n                    )}\r\n                </WeatherStyle>\r\n            </div>\r\n        </Background> :\r\n        <div>\r\n            <h1 className=\"main-title\">Home</h1>\r\n            <div className=\"container\">\r\n                <WeatherStyle className=\"weather-input\">\r\n                    <div> \r\n                        <form >\r\n                            <input className=\"input-onchage\" onChange={myCity} type=\"text\" maxLength={20} placeholder=\"Enter city name\" />\r\n                            <button onClick={myWeather} >Check</button>\r\n                        </form>\r\n                    </div>\r\n                    {citySearched &&  (\r\n                        <Result>\r\n                            <h3>{citySearched.name}</h3>\r\n                            <WeatherInfo>\r\n                                <p> <span>Weather: </span> {citySearched.weather[0].main}</p>\r\n                                <img src={`https://openweathermap.org/img/wn/${citySearched.weather[0].icon}@2x.png`} alt=\"icon-meteo\" />\r\n                            </WeatherInfo>\r\n                                <button onClick={setFavorite} className=\"btn-add-fav\" >Add to favorite</button>\r\n                            <WeatherInput>\r\n                                <p>City by default</p>\r\n                                <input onClick={checkChange} type=\"checkbox\" checked={isCheked} /> \r\n                            </WeatherInput>\r\n                        </Result>\r\n                    )}\r\n                </WeatherStyle>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Home;","// Library\r\nimport React, { useContext } from 'react'\r\nimport style from 'styled-components';\r\n// Views\r\n\r\n// Components\r\n// Files\r\nimport { FavoriteContext } from '../context/Favorite.Context';\r\nimport Snow from '../assets/neige.jpg'\r\nimport Mist from '../assets/brumeux.jpg'\r\nimport Clear from '../assets/soleil.jpg'\r\nimport Clouds from '../assets/nuageux.jpg'\r\nimport Thunderstorm from '../assets/orageux.jpg'\r\nimport Rain from '../assets/pluie.jpg'\r\n\r\n// style & CSS\r\nimport '../App.css';\r\nconst CardStyle = style.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 10px;\r\n    \r\n`;\r\nconst Result = style.div`\r\n    width: 450px;\r\n    padding-bottom: 2rem;\r\n    margin: 3rem 2rem 5rem 0;\r\n    border: solid black 2px;\r\n\r\n\r\n    h3{\r\n        font-size: 2rem;\r\n        margin: 1.5rem 2rem;\r\n        text-align: center;\r\n        background: dimgray;\r\n    }\r\n    .btn-remove-fav{\r\n        width: 150px;\r\n        padding: 1rem;\r\n        margin-left: 8rem;\r\n        border-radius: 3px;\r\n        background: skyblue;\r\n    }\r\n    background-image: ${(props) => {\r\n        switch(props.weather){\r\n            case \"Rain\":\r\n            return `url(${Rain})`;\r\n                \r\n            case \"Clouds\":\r\n            return `url(${Clouds})`;\r\n                \r\n            case \"Thunderstorm\":\r\n            return `url(${Thunderstorm})`;\r\n                \r\n            case \"Clear\":\r\n            return `url(${Clear})`;\r\n                \r\n            case \"Mist\":\r\n            return `url(${Mist})`;\r\n                \r\n            case \"Snow\":\r\n            return `url(${Snow})`;\r\n            \r\n            default: \r\n        }\r\n    }};\r\n    background-size: cover;\r\n`;\r\nconst WeatherInfo = style.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n\r\n    p{\r\n        margin-right: 1rem;\r\n        color: ${(props) => {\r\n            switch(props.weather){\r\n                case \"Rain\":\r\n                return \"black\";\r\n                    \r\n            default: \r\n            }\r\n        }};\r\n        background-color: ${(props) => {\r\n            switch(props.weather){\r\n                case \"Rain\":\r\n                return \"gray\";\r\n                    \r\n                default: \r\n            }\r\n        }};\r\n    }\r\n    span{\r\n        font-weight: 900;\r\n    }\r\n    img{\r\n        // background: red;\r\n        border-radius: 50px;\r\n    }\r\n`;\r\n\r\n\r\nconst CityCard = () => {\r\n    const {favoriteCity, setfavoriteCity} = useContext(FavoriteContext)\r\n\r\n    const removeFavorite = (name) => { \r\n        let fav = favoriteCity.filter(fav => fav.name !== name)\r\n        console.log(fav)\r\n        setfavoriteCity(fav)\r\n            console.log(' fav -> ', favoriteCity)\r\n            console.log(' setfav -> ', setfavoriteCity)\r\n    }\r\n\r\n    return (\r\n        favoriteCity &&\r\n        <CardStyle>\r\n                {favoriteCity.map( (city, index) => city &&\r\n                    <Result key={index}  weather={city.weather[0].main}>\r\n                        <h3>{city.name}</h3>\r\n                        <WeatherInfo weather={city.weather[0].main}>\r\n                            <p> <span>Weather: </span> {city.weather[0].main}</p>\r\n                            <img src={`https://openweathermap.org/img/wn/${city.weather[0].icon}@2x.png`} alt=\"icon-meteo\" />\r\n                            </WeatherInfo>\r\n                            <button onClick={() => removeFavorite(city.name)} className=\"btn-remove-fav\" >Remove to favorite</button>\r\n                    </Result>\r\n                )}\r\n        </CardStyle>\r\n    )\r\n}\r\n\r\nexport default CityCard;","// Library\r\n// Components\r\nimport CityCard from '../components/CityCard';\r\n// Files\r\n// style & CSS\r\nimport '../App.css';\r\n\r\n\r\nconst Favorite = () => {\r\n    return (\r\n        <>\r\n            <h1 className=\"main-title\">Favorite</h1>\r\n            <div>\r\n                <CityCard />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Favorite;","export default __webpack_public_path__ + \"static/media/logo.da2d7796.png\";","// Library\r\nimport { Link } from \"react-router-dom\";\r\nimport style from 'styled-components'\r\n\r\n// Views\r\n\r\n// Components\r\n// files\r\nimport logo from '../assets/logo.png'\r\n// style & CSS\r\nimport '../App.css';\r\nconst Nav = style.nav`\r\n    display: flex;\r\n    height: 3rem;\r\n    font-size: 1.2rem;\r\n    margin-top: 1rem;\r\n    color: whitesmoke;\r\n    background: dimgray;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    div{\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    span{\r\n        margin: 0 3rem;\r\n    }\r\n    ul{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n    li{\r\n        list-style: none;\r\n        margin-right: 10rem\r\n    }\r\n    a{\r\n        color: whitesmoke;\r\n        text-decoration: none;\r\n    }\r\n    .logo {\r\n        height: 45px;\r\n        width: 45px;\r\n        margin: 0 1rem;\r\n      }\r\n    .app-name{\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Nav>\r\n            <div>\r\n                <img className=\"logo\" src={logo} alt=\"logo\"/>\r\n                <li><Link className=\"app-name\" to=\"\">WeatherApp</Link></li>\r\n            </div>\r\n            <ul>\r\n                <li><Link to=\"/\">Home</Link></li>\r\n                <li><Link to=\"/favorite\">Favorite</Link></li> \r\n            </ul>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","// Library\r\nimport style from 'styled-components'\r\nimport moment from 'moment';\r\nimport { Link } from 'react-router-dom';\r\n// Views\r\n\r\n\r\n// Components\r\n\r\n\r\n// style & CSS\r\nimport '../App.css';\r\nconst FooterStyle = style.footer`\r\n    display: flex;\r\n    height: 10rem;\r\n    padding: 0 10rem;\r\n    color: black;\r\n    background: dimgray;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n\r\n    span{\r\n        font-size: 1.3rem;\r\n        font-weight: 700;\r\n        margin-right: 1rem;\r\n    }\r\n    a{\r\n        color: whitesmoke;\r\n        text-decoration: none;\r\n    }\r\n    `;\r\n \r\n\r\n\r\n\r\n\r\nconst Footer = () => {\r\n    let today = moment().format('MMMM Do YYYY')\r\n    let hours = moment().format('h:mm:ss a')\r\n    return (\r\n        <FooterStyle>\r\n            <div>\r\n                <h4><span>Web Developer :</span><Link>Anthony Delforge</Link></h4>\r\n            </div>\r\n            <div>\r\n                <h4> {today} </h4>\r\n                <h4> {hours} </h4>\r\n            </div>\r\n        </FooterStyle>\r\n    )\r\n}\r\n\r\nexport default Footer;","// Library\nimport { BrowserRouter, Switch, Route  } from 'react-router-dom';\nimport { useState } from 'react';\nimport style from 'styled-components';\n\n// Views\nimport Home from './views/Home';\nimport Favorite from './views/Favorite';\n\n// Components\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\n// Files\nimport { FavoriteContext } from './context/Favorite.Context';\n\n// style & CSS\nimport './App.css';\nconst Page = style.div`\n  display: flex;\n  min-height: 45.1rem;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nfunction App() {\n    const [favoriteCity, setfavoriteCity] = useState([]);\n\n  return (\n    <BrowserRouter>\n        <FavoriteContext.Provider value={{favoriteCity, setfavoriteCity}}>\n        <Page>\n            <Navbar />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/favorite\" component={Favorite} />\n            </Switch>\n            <Footer />\n        </Page>\n        </FavoriteContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}